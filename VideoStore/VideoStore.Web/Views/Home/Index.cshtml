@using PagedList.Mvc;

@model PagedList.IPagedList<VideoStore.Models.Movie>
@{
    ViewBag.Title = "Home page";
}

<h2>Home</h2>

<table class="table table-condensed">
    <tr class="active">
        <th class= "col-md-3">@Html.ActionLink("Title", "Index", new { sortBy = ViewBag.SortTitleParameter })</th>
        <th class="col-md-2">@Html.ActionLink("Category", "Index", new { sortBy = ViewBag.SortCategoryParameter })</th>
        <th class="col-md-2">@Html.ActionLink("Rating", "Index", new { sortBy = ViewBag.SortRatingParameter })</th>
        <th class="col-md-2">@Html.Label("Year")</th>
        <th class ="col-md-3">@Html.Label("Status")</th>
        <td>
            @Html.ActionLink("+", "NewMovie", "Home", null, new { @class = "btn btn-primary" })
        </td>
    </tr>

    @foreach (var movie in Model)
    {
        var movieClass = String.Empty;

        if (movie.Status.Name == "Available")
        {
            movieClass = "yellow";
        }
        else if (movie.Status.Name == "Rented")
        {
            movieClass = "green";
        }
        else if (movie.Status.Name == "Rented(exp)!")
        {
            movieClass = "red";
        }

        <tr onclick="location.href ='@Url.Action("MoreDetails","Home", new {id = movie.Id})'" class=@movieClass>
            <td>@Html.DisplayFor(modelItem => movie.Title)</td>
            <td>@Html.DisplayFor(modelItem => movie.Category.Name)</td>
            <td>@Html.DisplayFor(modelItem => movie.Rating)</td>
            <td>@Html.DisplayFor(modelItem => movie.Year)</td>
            <td>@Html.DisplayFor(modelItem => movie.Status.Name)</td>
        </tr>
    }

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))













